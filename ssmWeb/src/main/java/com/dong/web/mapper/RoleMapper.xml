<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dong.web.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.dong.web.domain.Role" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_name
  </sql>

  <select id="findRoleList"  parameterType="string" resultType="Role">
        SELECT r.* FROM role r
        INNER JOIN user_role ur ON ur.role_id = r.id
        INNER JOIN `user` u ON u.id = ur.user_id
        WHERE u.loginName = #{0}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from role
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.dong.web.domain.Role" >
    insert into role (id, role_name)
    values (#{id,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.dong.web.domain.Role" >
    update role
    set role_name = #{roleName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>